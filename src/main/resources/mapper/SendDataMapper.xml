<?xml version="1.0" encoding="UTF-8" ?> <!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="dao.SendDataDao">
    <insert id="insertQa" >

        insert into `question_answer` (qa_id,qa_user_id,qa_content,qa_video,qa_time,qa_audio,qa_video_cover,qa_count)
        values (#{qaId} ,#{userId} ,#{qaContent} ,#{qaVideo} ,#{qaTime} ,#{qaAudio},#{qaVideoCover},"0" )
    </insert>


    <insert id="addLikeQaWithUser">

        insert into `qa_like` (qa_like_id,qa_like_qa_id,qa_like_user_id)
        values (#{qaLikeId} ,#{qaLikeQaId} ,#{qaLikeUserId} )
    </insert>


    <delete id="removeLikeQaWithUser">
        delete from qa_like where qa_like_qa_id = #{qaLikeQaId} and qa_like_user_id = #{qaLikeUserId}
    </delete>

    <insert id="insertFav">
        insert into `fav` (fav_id,fav_user_id,fav_class_id,fav_time)
        values (#{favId} ,#{uuid} ,#{classId} ,#{favTime})
    </insert>

    <delete id="deleteFav">
        delete from `fav` where fav_user_id = #{uuid} and fav_class_id = #{classId}
    </delete>
    <insert id="addLikeCommentWithUser">

        insert into comment_like (comment_like_id,comment_like_comment_id,comment_like_user_id)
        values (#{commentLikeId} ,#{commentLikeCommentId} ,#{commentLikeUserId} )
    </insert>


    <delete id="removeLikeCommentWithUser">
        delete from comment_like where comment_like_comment_id = #{commentLikeCommentId} and comment_like_user_id = #{commentLikeUserId}
    </delete>

    <insert id="addLikeReplyWithUser">

        insert into reply_like (reply_like_id,reply_like_reply_id,reply_like_user_id)
        values (#{replyLikeId} ,#{replyLikeReplyId} ,#{replyLikeUserId} )
    </insert>


    <delete id="removeLikeReplyWithUser">
        delete from reply_like where reply_like_reply_id = #{replyLikeReplyId} and reply_like_user_id = #{replyLikeUserId}
    </delete>

    <insert id="insertQaComment">

        insert into comment_qa (comment_q_id,comment_q_qa_id,comment_q_user_id,comment_q_content,comment_q_time)
        values (#{commentQId} ,#{qaId} ,#{uuid} ,#{content} ,#{sendTime} )
    </insert>

    <insert id="insertReply">

        insert into reply (reply_id,reply_r_id,reply_comment,reply_user_id,reply_to_user_id,reply_time)
        values (#{replyId} ,#{replyRId} ,#{replyContent},#{replyUid} ,#{replyToUid} ,#{replyTime} )
    </insert>


    <delete id="deleteArticle">
        delete from article where article_id = #{articleId} and article_author_id = #{uuid}
    </delete>

    <delete id="deleteQa">
        delete from `question_answer` where qa_id = #{qaId} and qa_user_id = #{uuid}
    </delete>
    <delete id="deleteComment">
        delete from comment_qa where comment_q_id = #{commentQId} and comment_q_user_id = #{commentQUserId}
    </delete>

    <update id="updateComment">
        update comment_qa set comment_q_content = "该评论已被删除" where comment_q_id = #{commentQId} and comment_q_user_id = #{commentQUserId}
    </update>

    <delete id="deleteReply">
        delete from reply where reply_id = #{replyId} and reply_user_id = #{replyUserId}
    </delete>

    <insert id="insertVideoView">
        insert into classd_view (classd_view_id,classd_view_classd_id,classd_view_user_id,classd_view_time,classd_view_class_id,classd_view_gone)
        values (#{classdViewId} ,#{classdViewClassdId} ,#{classdViewUserId} ,#{classdViewTime},#{classdViewClassId},1 )
    </insert>

    <insert id="insertVideoViewMore">
        insert into classd_view (classd_view_id,classd_view_classd_id,classd_view_user_id,classd_view_time,classd_view_class_id,classd_view_gone)
        values (UUID() ,#{classdViewClassdId} ,#{classdViewUserId} ,#{classdViewTime},#{classdViewClassId},1 )
    </insert>

    <update id="removeViewHis">
        update classd_view set classd_view_gone = 0 where classd_view_classd_id = #{classdId} and classd_view_user_id = #{uuid}
    </update>

    <insert id="uploadArticle">
        insert into article (article_id,article_author_id,article_time,article_content,article_img,article_title,article_count) values (#{articleId} ,#{articleAuthorId} ,#{articleTime} ,#{articleContent} ,#{articleImg} ,#{articleTitle},"0" )
    </insert>

    <insert id="sendRe">
        insert into `question_answer` (qa_id,qa_user_id,qa_content,qa_time,qa_re_id,qa_count)
        values (#{qaId} ,#{qaUserId} ,#{qaContent} ,#{qaTime} ,#{qaReId},"0")
    </insert>

    <insert id="noticeInfo">
        insert into notice (notice_id,notice_from_user_id,notice_to_user_id,notice_content,notice_type,notice_target_id,notice_status,notice_time)
        values (#{noticeId},#{noticeFromUserId} ,#{noticeToUserId} ,#{noticeContent} ,#{noticeType} ,#{noticeTargetId} ,#{noticeStatus} ,#{noticeTime} )
    </insert>

    <update id="noticeVisible">
        update notice set notice_status = 1 where notice_id = #{noticeId} and notice_to_user_id = #{noticeToUserId}
    </update>

    <update id="noticeVisibleAll">
        update notice set notice_status = 1 where notice_to_user_id = #{noticeToUserId}
    </update>

    <delete id="deleteNoticeInfo">
        delete from notice where notice_target_id = #{noticeTargetId} and notice_from_user_id = #{noticeFromUserId} and notice_type = #{noticeType}
    </delete>

    <insert id="sendAuthInfo">
        insert into auth_handle (auth_handle_id,auth_handle_applicant_id,auth_handle_img,auth_handle_info,auth_handle_time,auth_handle_status,auth_handle_advice)
        values (#{authId} ,#{authUserId} ,#{authImg} ,#{authInfo} ,#{authTime} ,0,"请等待审核")
    </insert>

    <insert id="insertFeedBackInfo">
        insert into feedback (feedback_id,feedback_user_id,feedback_content,feedback_time)
        values (#{feedbackId},#{userId},#{feedbackContent},#{feedbackTime})
    </insert>

    <insert id="createClassInfo">
        insert into class (class_id,class_title,class_author,class_author_id,class_price,class_des,class_img,class_duration,class_type,class_type_detail,class_author_des,class_score,class_create_time,class_count)
        values (#{classId},#{classTitle},#{classAuthor},#{classAuthorId},#{classsPrice},#{classDes},#{classImg},"0","音乐",#{classType},#{classAuthorDes},"暂无评分",#{classTime},0)
    </insert>

    <update id="editClassInfo">
        update class set
        class_title = #{classTitle},
        class_price = #{classsPrice},
        class_des = #{classDes},
        class_img = #{classImg},
        class_type_detail = #{classType},
        class_create_time = #{classTime}
        where class_id = #{classId}
    </update>

    <insert id="uploadClassDetail">
        insert into class_detail
        (classd_id,classd_title,class_classd_id,classd_des,classd_duration,classd_video,classd_create_time,classd_video_cover,classd_status,classd_count)
        values (#{classdId},#{classdTitle},#{classclassdId},#{classdDes},#{classdDuration},#{classdVideo},#{classdCreateTime},#{classdVideoCover},0,0)
    </insert>

    <update id="addDuration">
        update `class` set
        class_duration = #{classDuration}
        where class_id = #{classId}
    </update>

    <delete id="deleteClass">
        delete from `class` where class_id = #{classId} and class_author_id = #{uuid}
    </delete>

    <delete id="deleteClassDetail">
        delete from `class_detail` where classd_id = #{classdId}
    </delete>



    <insert id="likeArticle">
        insert into article_like
        (article_like_id,article_article_id,article_user_id,article_like_time)
        values (#{articleLikeId},#{articleId},#{userId},#{articleLikeTime})
    </insert>

    <delete id="removeLikeArticle">
        delete from article_like where article_article_id = #{articleId} and article_user_id = #{userId}
    </delete>


    <insert id="insertArticleComment">
        insert into article_comment
        (art_com_id,art_com_user_id,art_com_art_id,art_com_content,art_com_time,art_com_reply)
        values (#{artComId},#{artComUserId},#{artComArtId},#{artCom},#{artComTime},"")
    </insert>

    <update id="replyArticleComment">
        update `article_comment` set
        art_com_reply = #{artComReply}
        where art_com_id = #{artComId} and art_com_user_id = #{artComUserId}
    </update>

    <delete id="deleteArticleComment">
        delete from `article_comment` where art_com_id = #{artComId}
    </delete>

    <update id="deleteReplyArticleComment">
        update `article_comment` set
        art_com_reply = ""
        where art_com_id = #{artComId} and art_com_user_id = #{artComUserId}
    </update>

    <insert id="likeArticleComment">
        insert into article_comment_like
        (art_com_like_id,art_com_like_user_id,art_com_like_time,art_com_like_artcom_id)
        values (#{artComLikeId},#{userId},#{artLikeTime},#{artCommentId})
    </insert>

    <delete id="removeLikeArticleComment">
        delete from article_comment_like where art_com_like_artcom_id = #{artCommentId} and art_com_like_user_id = #{userId}
    </delete>

    <insert id="addQaView">
        insert into qa_view
        (qa_view_id,qa_view_user_id,qa_view_qa_id,qa_view_time)
        values (#{qaViewId},#{qaViewUserId},#{qaViewQaId},#{qaViewTime})
    </insert>

    <update id="addQaViewCount">
        update `question_answer` set
        qa_count = convert((convert(qa_count,signed) + 1),char)
        where qa_id = #{qaId}
    </update>

    <update id="addVideoViewCount">
        update `class` set
        class_count = convert((convert(class_count,signed) + 1),char)
        where class_id = #{classid};
        update `class_detail` set
        classd_count = convert((convert(classd_count,signed) + 1),char)
        where classd_id = #{classdid}
    </update>

    <insert id="insertOrders">
        insert into transaction_order
        (transaction_id,transaction_number,transaction_user_id,transaction_date,transaction_class_id,transaction_price,transaction_discount,transaction_end_price,transaction_status)
        values (#{orderId},#{orderNumber},#{orderUserId},#{orderTime},#{orderClassId},#{orderPirce},#{orderDiscount},#{orderEndPrice},#{orderStatus})
    </insert>

    <update id="updateTransaction">
        update `transaction_order` set
        transaction_pay_type = #{payType},
        transaction_status = #{payStatus},
        bank_type = #{bankType},
        wechat_number = #{wechatNumber},
        transaction_end_time = #{endTime}
        where transaction_id = #{transactionId}

    </update>

    <insert id="insertClassBuyInfo">
        insert into class_buy
        (class_buy_id,class_buy_class_id,class_buy_user_id,class_buy_time)
        values (#{class_buy_id},#{class_buy_class_id},#{class_buy_user_id},#{buy_time})
    </insert>

    <update id="updateUserBalance">
        update `user` set
        user_balance = #{balance}
        where user_id = #{userId}
    </update>
</mapper>