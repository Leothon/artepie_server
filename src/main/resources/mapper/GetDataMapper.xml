<?xml version="1.0" encoding="UTF-8" ?> <!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="dao.GetDataDao">


    <resultMap id="bannerMap" type="entity.Banner">
        <id column="banner_id" property="banner_id"/>
        <result column="banner_img" property="banner_img"/>
        <result column="banner_type" property="banner_type"/>
        <result column="banner_to_class_id" property="banner_to_class_id"/>
    </resultMap>
    <select id="getBanners" resultMap="bannerMap">
        select banner_id,banner_img,banner_type,banner_to_class_id from banner order by banner_create_time desc limit 4
    </select>

    <resultMap id="classMap" type="entity.TeaClasss">
        <id column="class_id" property="selectId"/>
        <result column="class_title" property="selectlisttitle"/>
        <result column="class_author" property="selectauthor"/>
        <result column="class_price" property="selectprice"/>
        <result column="class_img" property="selectbackimg"/>
        <result column="class_author_id" property="selectauthorid"/>
        <result column="class_des" property="selectdesc"/>
    </resultMap>

    <select id="getClassInfo" resultMap="classMap">
        select class_id,class_title,class_author,class_price,class_img,class_author_id,class_des from `class` where class_id = #{classId}
    </select>
    <select id="getClasses" resultMap="classMap">
        select class_id,class_title,class_author,class_price,class_img,class_author_id,class_des from `class` order by class_create_time desc limit 10
    </select>

    <select id="getClassByTea" resultMap="classMap">
        select class_id,class_title,class_author,class_price,class_img,class_author_id,class_des from `class` where class_author_id = #{teaId} order by class_create_time desc
    </select>


    <select id="getClassByType" resultMap="classMap">
        select class_id,class_title,class_author,class_price,class_img,class_author_id,class_des from `class` where class_type_detail = #{type} order by class_create_time desc
    </select>

    <select id="getBuyClassByid" resultMap="classMap">
        select b.class_id,b.class_title,b.class_author,b.class_price,b.class_img,b.class_author_id,b.class_des from `class` b join class_buy a on a.class_buy_class_id = b.class_id where a.class_buy_user_id = #{uid} order by a.class_buy_time desc limit 10

    </select>
    <select id="getMoreClass" resultMap="classMap" parameterType="integer">
        select class_id,class_title,class_author,class_price,class_img from `class` order by class_create_time desc limit #{currentPage} ,10
    </select>

    <resultMap id="classDetailMap" type="entity.TeaClasss">
        <id column="class_id" property="selectId"/>
        <result column="class_title" property="selectlisttitle"/>
        <result column="class_author" property="selectauthor"/>
        <result column="class_price" property="selectprice"/>
        <result column="class_img" property="selectbackimg"/>
        <result column="class_des" property="selectdesc"/>
        <result column="class_duration" property="selecttime"/>
        <result column="class_author_des" property="selectauthordes"/>
        <result column="class_score" property="selectscore"/>
    </resultMap>

    <select id="getClassDetail" resultMap="classDetailMap">
        select class_id,class_title,class_author,class_price,class_img,class_des,class_duration, class_author_des,class_score from `class` where class_id = #{classId}
    </select>

    <select id="isFav" resultType="integer">
        select isnull((select fav_id from fav where fav_user_id = #{userId} and fav_class_id = #{classId} ))
    </select>
    <select id="getClassView" resultType="integer">
         select count(*) from classd_view where classd_view_class_id = #{classId}
    </select>

    <select id="getClassdView" resultType="integer">
         select count(*) from classd_view where classd_view_classd_id = #{classdId}
    </select>

    <select id="getTypeClassCount" resultType="integer">
        select count(*) from `class` where class_type_detail = #{type}
    </select>
    <select id="getFavCount" resultType="integer">
        select count(*) from `fav` where fav_class_id = #{classId}
    </select>
    <select id="isUserBuy" resultType="integer" parameterType="string">
        select isnull((select class_buy_id from class_buy where class_buy_class_id = #{classId} and class_buy_user_id = #{userId} ))
    </select>

    <select id="isQQRegister" resultType="integer" parameterType="string">
        select isnull((select tencent_token from `user` where tencent_token = #{accessToken} ))
    </select>
    <resultMap id="classListMap" type="entity.ClassDetailList">
        <id column="classd_id" property="classd_id"/>
        <result column="classd_title" property="classd_title"/>
        <result column="class_classd_id" property="class_classd_id"/>
        <result column="classd_des" property="classd_des"/>
        <result column="classd_duration" property="classd_duration"/>
        <result column="classd_video" property="classd_video"/>
        <result column="classd_create_time" property="classd_create_time"/>
    </resultMap>
    <select id="getClassList" resultMap="classListMap">
        select classd_id,classd_title,class_classd_id,classd_des,classd_duration,classd_video,classd_create_time
        from class_detail  where class_classd_id = #{classId} order by classd_create_time
    </select>

    <resultMap id="teacherMap" type="entity.User">
        <id column="user_id" property="user_id"/>
        <result column="user_name" property="user_name"/>
        <result column="user_icon" property="user_icon"/>
        <result column="user_role" property="user_role"/>
        <result column="user_signal" property="user_signal"/>
    </resultMap>
    <select id="getTeacherInUser" resultMap="teacherMap">
        select user_id,user_name,user_icon,user_role,user_signal from `user` where user_role = "1"
    </select>
    <select id="getClassVideo" resultMap="classListMap">
        select classd_id,classd_title,class_classd_id,classd_des,classd_duration,classd_video,classd_create_time
        from class_detail  where class_classd_id = #{classId} and classd_id = #{classdId}
    </select>

    <select id="getClassdIds" resultType="string">
        select classd_id from class_detail where class_classd_id = #{classId} order by classd_create_time
    </select>

    <select id="getClassPrice" resultType="string">
        select class_price from `class` where class_id = #{classId}
    </select>
    <resultMap id="qaMap" type="dto.QAData">
        <id column="qa_id" property="qa_id"/>
        <result column="user_name" property="user_name"/>
        <result column="user_icon" property="user_icon"/>
        <result column="user_signal" property="user_signal"/>
        <result column="qa_user_id" property="qa_user_id"/>
        <result column="qa_content" property="qa_content"/>
        <!--<result column="qa_like" property="qa_like"/>-->
        <!--<result column="qa_comment" property="qa_comment"/>-->
        <result column="qa_video" property="qa_video"/>
        <result column="qa_audio" property="qa_audio"/>
        <result column="qa_time" property="qa_time"/>
        <result column="qa_video_cover" property="qa_video_cover"/>
        <result column="qa_re_id" property="qa_re_id"/>
    </resultMap>

    <select id="getQAData" resultMap="qaMap">

        select a.qa_id,a.qa_user_id,a.qa_content,a.qa_video,a.qa_time,a.qa_audio,a.qa_re_id,b.user_id,b.user_name,b.user_icon,b.user_signal,a.qa_video_cover
        from question_answer a join `user` b on a.qa_user_id = b.user_id order by a.qa_time desc limit 15
    </select>


    <select id="getMoreQAData" resultMap="qaMap">
        select a.qa_id,a.qa_user_id,a.qa_content,a.qa_video,a.qa_time,a.qa_audio,b.user_id,b.user_name,b.user_icon,b.user_signal,a.qa_video_cover
        from question_answer a join `user` b on a.qa_user_id = b.user_id order by a.qa_time desc limit #{currentPage},15

    </select>

    <select id="getQADataById" resultMap="qaMap">

        select a.qa_id,a.qa_user_id,a.qa_content,a.qa_video,a.qa_time,a.qa_audio,b.user_id,b.user_name,b.user_icon,b.user_signal,a.qa_video_cover
        from question_answer a join `user` b on a.qa_user_id = b.user_id where b.user_id = #{uuid} order by a.qa_time desc limit 15
    </select>


    <select id="getMoreQADataById" resultMap="qaMap">
        select a.qa_id,a.qa_user_id,a.qa_content,a.qa_video,a.qa_time,a.qa_audio,b.user_id,b.user_name,b.user_icon,b.user_signal,a.qa_video_cover
        from question_answer a join `user` b on a.qa_user_id = b.user_id where b.user_id = #{uuid}  order by a.qa_time desc limit #{currentPage} ,15

    </select>

    <select id="getQADetail" resultMap="qaMap">
        select a.qa_id,a.qa_user_id,a.qa_content,a.qa_video,a.qa_time,a.qa_re_id,a.qa_audio,b.user_id,b.user_name,b.user_icon,b.user_signal,a.qa_video_cover
        from question_answer a join `user` b on a.qa_user_id = b.user_id where a.qa_id = #{qaId}

    </select>

    <resultMap id="commentMap" type="entity.Comment">
        <id column="comment_q_id" property="comment_q_id"/>
        <result column="comment_q_qa_id" property="comment_q_qa_id"/>
        <result column="comment_q_user_id" property="comment_q_user_id"/>
        <result column="comment_q_content" property="comment_q_content"/>
        <!--<result column="comment_q_like" property="comment_q_like"/>-->
        <result column="user_name" property="user_name"/>
        <result column="user_icon" property="user_icon"/>
        <result column="comment_q_time" property="comment_q_time"/>
    </resultMap>

    <select id="getComment" resultMap="commentMap">
        select a.comment_q_id,a.comment_q_qa_id,a.comment_q_user_id,a.comment_q_content,a.comment_q_time,b.user_name,b.user_icon from comment_qa a join `user` b
         on a.comment_q_user_id = b.user_id where a.comment_q_qa_id = #{qaId} order by a.comment_q_time desc
    </select>

    <resultMap id="replyMap" type="entity.Reply">
        <id column="reply_id" property="reply_id"/>
        <result column="reply_r_id" property="reply_r_id"/>
        <result column="reply_comment" property="reply_comment"/>
        <result column="reply_user_id" property="reply_user_id"/>
        <result column="reply_to_user_id" property="reply_to_user_id"/>
        <result column="reply_like" property="reply_like"/>
        <result column="user_name" property="user_name"/>
        <result column="user_icon" property="user_icon"/>
        <result column="to_user_name" property="to_user_name"/>
        <result column="to_user_icon" property="to_user_icon"/>
        <result column="reply_time" property="reply_time"/>
    </resultMap>
    <select id="getReply" resultMap="replyMap">

        select a.reply_id,a.reply_r_id,a.reply_comment,a.reply_user_id,a.reply_to_user_id,a.reply_time,b.user_name,b.user_icon,d.user_name as to_user_name,d.user_icon as to_user_icon

        from reply a
        join `user` b on a.reply_user_id = b.user_id join `user` d on a.reply_to_user_id = d.user_id  where a.reply_r_id = #{commentId} order by a.reply_time
    </select>


    <select id="getSingleComment" resultMap="commentMap">
        select a.comment_q_id,a.comment_q_qa_id,a.comment_q_user_id,a.comment_q_content,a.comment_q_time,b.user_name,b.user_icon from comment_qa a join `user` b
         on a.comment_q_user_id = b.user_id where a.comment_q_id = #{commentId}
    </select>

    <select id="getQALike" resultType="integer">
        select count(*) from qa_like where qa_like_qa_id = #{qaId}
    </select>

    <select id="getCommentLike" resultType="integer">
        select count(*) from comment_like where comment_like_comment_id = #{commentId}
    </select>

    <select id="getQAComment" resultType="integer">
        select count(*) from comment_qa where comment_q_qa_id = #{qaId}
    </select>

    <select id="isLike" resultType="integer" parameterType="string">
        select isnull((select qa_like_id from `qa_like` where qa_like_qa_id = #{qaId} and qa_like_user_id = #{userId}))
    </select>

    <select id="isCommentLike" resultType="integer" parameterType="string">
        select isnull((select comment_like_id from comment_like where comment_like_comment_id = #{commentId} and comment_like_user_id = #{userId} ))
    </select>

    <select id="getReplyLike" resultType="integer">
        select count(*) from reply_like where reply_like_reply_id = #{replyId}
    </select>

    <select id="isReplyLike" resultType="integer" parameterType="string">
         select isnull((select reply_like_id from reply_like where reply_like_reply_id = #{replyId} and reply_like_user_id = #{userId}))

    </select>

    <select id="getCommentReplyCount" resultType="integer">
         select count(*) from reply where reply_r_id = #{commentId}
    </select>

    <resultMap id="teaInfo" type="entity.User">
        <id column="user_id" property="user_id"/>
        <result column="user_name" property="user_name"/>
        <result column="user_signal" property="user_signal"/>
        <result column="user_role" property="user_role"/>
        <result column="user_icon" property="user_icon"/>
    </resultMap>
    <select id="getTeaInfo" resultMap="teaInfo">
        select user_id,user_name,user_signal,user_role,user_icon from `user` where user_id = #{teaId}
    </select>

    <resultMap id="favClassById" type="entity.TeaClasss">
        <id column="class_id" property="selectId"/>
        <result column="class_title" property="selectlisttitle"/>
        <result column="class_des" property="selectdesc"/>
        <result column="class_img" property="selectbackimg"/>
    </resultMap>

    <select id="getFavClassByUid" resultMap="favClassById">
        select b.class_id,b.class_title,b.class_des,b.class_img from `fav` a join `class` b on a.fav_class_id = b.class_id where a.fav_user_id = #{uuid} order by a.fav_time
    </select>


    <resultMap id="classDetailByIdView" type="entity.ClassDetailList">
        <id column="classd_id" property="classd_id"/>
        <result column="classd_title" property="classd_title"/>
        <result column="classd_des" property="classd_des"/>
        <result column="class_classd_id" property="class_classd_id"/>
    </resultMap>
    
    <select id="getViewHisById" resultMap="classDetailByIdView">
        select b.classd_id,b.classd_title,b.classd_des,b.class_classd_id from class_detail b join classd_view a on a.classd_view_classd_id = b.classd_id where a.classd_view_user_id = #{uuid} and a.classd_view_gone = 1 order by a.classd_view_time
    </select>


    <resultMap id="classDView" type="entity.ClassDView">
        <id property="classd_view_id" column="classd_view_id"/>
        <result property="classd_view_classd_id" column="classd_view_classd_id"/>
        <result property="classd_view_user_id" column="classd_view_user_id"/>
        <result property="classd_view_time" column="classd_view_time"/>
        <result property="classd_view_class_id" column="classd_view_class_id"/>
        <result property="classd_view_gone" column="classd_view_gone"/>
    </resultMap>
    <select id="getStudyEveryday" resultMap="classDView">

        select * from (select * from classd_view a where DATE_SUB(CURDATE(), INTERVAL 7 DAY) &lt;= date(#{time}) and a.classd_view_user_id = #{uuid} ) a where not exists (select 1 from classd_view b where b.classd_view_classd_id = a.classd_view_classd_id and a.classd_view_user_id = b.classd_view_user_id and a.classd_view_id &lt; b.classd_view_id)
    </select>

    <resultMap id="bannerArticle" type="entity.Banner">
        <id column="article_id" property="banner_id"/>
        <result column="article_img" property="banner_img"/>
        <result column="article_title" property="banner_url"/>
    </resultMap>
    <select id="getArticleBanner" resultMap="bannerArticle">
        select article_id,article_img,article_title from article order by article_time desc limit 5
    </select>

    <resultMap id="articleList" type="entity.Article">
        <id column="article_id" property="articleId"/>
        <result column="article_img" property="articleImg"/>
        <result column="article_time" property="articleTime"/>
        <result column="article_title" property="articleTitle"/>
        <result column="user_name" property="articleAuthorName"/>
        <result column="user_icon" property="articleAuthorIcon"/>
    </resultMap>
    <select id="getArticleList" resultMap="articleList">
        select a.article_id,a.article_img,a.article_time,a.article_title,b.user_name,b.user_icon from article a join user b on a.article_author_id = b.user_id order by a.article_time desc
    </select>

    <resultMap id="articleDetail" type="entity.Article">
        <id column="article_id" property="articleId"/>
        <result column="article_author_id" property="articleAuthorId"/>
        <result column="article_img" property="articleImg"/>
        <result column="article_time" property="articleTime"/>
        <result column="article_title" property="articleTitle"/>
        <result column="user_name" property="articleAuthorName"/>
        <result column="user_icon" property="articleAuthorIcon"/>
        <result column="article_content" property="articleContent"/>
    </resultMap>

    <select id="getArticleDetail" resultMap="articleDetail">
        select a.article_id,a.article_img,a.article_time,a.article_title,b.user_name,b.user_icon,a.article_content,a.article_author_id from article a join user b on a.article_author_id = b.user_id where a.article_id = #{articleId}
    </select>

    <select id="getUserIdByQaId" resultType="string">
        select qa_user_id from question_answer where qa_id = #{qaId}
    </select>


</mapper>